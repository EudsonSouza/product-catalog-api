name: product-catalog

services:
  postgres:
    image: postgres:17-alpine
    container_name: product-catalog-db
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - product-catalog-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: product-catalog-api
    environment:
      DB_HOST: "postgres"
      DB_NAME: "${DB_NAME}"
      DB_USERNAME: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_PORT: "5432"
      ConnectionStrings__DefaultConnection: "Host=postgres;Database=${DB_NAME};Username=${DB_USERNAME};Password=${DB_PASSWORD};Port=5432"

      Logging__LogLevel__Default: "${LOG_LEVEL_DEFAULT:-Information}"
      Logging__LogLevel__Microsoft.AspNetCore: "${LOG_LEVEL_ASPNETCORE:-Warning}"
      AllowedHosts: "*"
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://0.0.0.0:8080"
    ports:
      - "5080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - product-catalog-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  product-catalog-network:
    driver: bridge
